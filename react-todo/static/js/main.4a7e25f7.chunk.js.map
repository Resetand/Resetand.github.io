{"version":3,"sources":["actions/filter.js","components/Search/index.js","components/Search/Container.js","components/Search/UI.jsx","components/Filter/index.js","components/Filter/Container.js","components/Filter/UI.jsx","serverAPI/index.js","components/Todo/index.js","components/Todo/UI.jsx","components/TodoList/UI.jsx","components/TodoList/Container.js","components/TodoList/index.js","actions/todoList.js","actions/loading.js","components/AddTodo/UI.jsx","components/AddTodo/index.js","components/AddTodo/Container.js","components/App/index.js","components/App/UI.jsx","reducers/filter.js","reducers/todoList.js","store/index.js","reducers/loading.js","index.js"],"names":["filterTypes","Container","connect","_ref","filter","dispatch","search","by","type","toLowerCase","filterActions","reset","props","react_default","a","createElement","FormControl","fullWidth","Input","value","placeholder","onChange","e","target","onBlur","className","showAll","showDone","showActive","ButtonGroup","variant","color","size","aria-label","Button","onClick","serverAPI","API","Object","classCallCheck","this","url","todos","index","fetch","then","response","json","todo","count","res","todoList","slice","map","id","title","completed","done","UI","state","isEdit","show","timeout","toggleEdit","_this","setState","removeTodo","setTimeout","_this2","_this$props","saveTodo","toggleDoneTodo","Collapse","direction","in","ListItem","FormControlLabel","control","Checkbox","checked","offEdit","InputBase","onKeyPress","charCode","concat","readOnly","ListItemSecondaryAction","IconButton","Icon","fontSize","React","Component","setServerData","loading","globalTodoListIsEmpty","CircularProgress","console","log","Typography","style","opacity","cursor","List","Todo","key","filterTodo","indexOf","length","date","Date","getDate","todoActions","getTodos","data","add","preventDefault","addTodo","updateValue","onSubmit","width","TextField","autoFocus","margin","Math","random","Grid","item","container","xs","lg","Fragment","component","AppBar","position","Toolbar","spacing","Search","Filter","Paper","TodoList","AddTodo","initialState","store","createStore","combineReducers","arguments","undefined","action","objectSpread","copy","ind","toConsumableArray","reduce","cuttentIndex","composeWithDevTools","applyMiddleware","thunk","render","es","App","document","getElementById"],"mappings":"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","file":"static/js/main.4a7e25f7.chunk.js","sourcesContent":["export const SEARCH_FILTER = \"SET_SEARCH_FILTER\";\nexport const DONE_FILTER = \"DONE_FILTER\";\nexport const ACTIVE_FILTER = \"ACTIVE_FILTER\";\nexport const RESET_FILTER = \"RESET_FILTER\";\n\nexport const filterTypes = {\n  SEARCH: \"SEARCH\",\n  DONE: \"DONE\",\n  ACTIVE: \"ACTIVE\",\n  ALL: \"ALL\"\n};\n\nexport const searchFilter = by => ({\n  type: SEARCH_FILTER,\n  filter: {\n    type: \"SEARCH\",\n    by: by.toLowerCase()\n  }\n});\n\nexport const doneFilter = () => ({\n  type: DONE_FILTER,\n  filter: {\n    type: \"DONE\",\n    by: null\n  }\n});\nexport const activeFilter = () => ({\n  type: ACTIVE_FILTER,\n  filter: {\n    type: \"ACTIVE\",\n    by: null\n  }\n});\n\nexport const resetFilter = () => ({\n  type: RESET_FILTER,\n  filter: {\n    type: \"ALL\",\n    by: null\n  }\n});\n","import Container from \"./Container\";\nexport default Container;\n","import { connect } from \"react-redux\";\nimport * as filterActions from \"../../actions/filter\";\nimport UI from \"./UI\";\n\nconst mapStateToProps = ({ filter }) => ({ filter });\nconst mapDispatchToProps = dispatch => ({\n  search: by => dispatch(filterActions.searchFilter(by)),\n  reset: () => dispatch(filterActions.resetFilter())\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UI);\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport \"./styles.css\";\n\nexport default function(props) {\n  const { search, filter, reset } = props;\n  return (\n    // <Paper>\n    <FormControl fullWidth>\n      <Input\n        value={filter.by ? filter.by : \"\"}\n        placeholder=\"Serach todo...\"\n        onChange={e => search(e.target.value)}\n        onBlur={() => {\n          if (!filter.by) reset();\n        }}\n        className=\"search-input\"\n      />\n    </FormControl>\n  );\n}\n","import Container from \"./Container\";\nexport default Container;\n","import { connect } from \"react-redux\";\nimport * as filterActions from \"../../actions/filter\";\nimport UI from \"./UI\";\n\nconst mapStateToProps = ({ filter }) => ({ filter });\nconst mapDispatchToProps = dispatch => ({\n  showAll: () => dispatch(filterActions.resetFilter()),\n  showDone: () => dispatch(filterActions.doneFilter()),\n  showActive: () => dispatch(filterActions.activeFilter())\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UI);\n","import React from \"react\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./styles.css\";\n\nexport default function(props) {\n  const { filter, showAll, showDone, showActive } = props;\n  return (\n    <div className=\"btnGroup\">\n      <ButtonGroup\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        aria-label=\"Small outlined button group\"\n      >\n        <Button\n          onClick={showAll}\n          className={filter.type === \"ALL\" ? \"active\" : \"\"}\n        >\n          All\n        </Button>\n        <Button\n          onClick={showActive}\n          className={filter.type === \"ACTIVE\" ? \"active\" : \"\"}\n        >\n          Active\n        </Button>\n        <Button\n          onClick={showDone}\n          className={filter.type === \"DONE\" ? \"active\" : \"\"}\n        >\n          Done\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","class API {\n  constructor() {\n    this.url = \"https://jsonplaceholder.typicode.com/todos/\";\n    this.todos = [];\n  }\n  getTodo(index) {\n    return fetch(this.url + index)\n      .then(response => response.json())\n      .then(todo => {\n        return todo;\n      });\n  }\n\n  getTodos(count) {\n    return fetch(this.url)\n      .then(res => res.json())\n      .then(todoList => todoList.slice(0, count))\n      .then(todoList => _convert(todoList));\n  }\n}\n//{userId: 1, id: 1, title: \"delectus aut autem\", completed: false}\n//{id: 1, title: \"delectus aut autem\", completed: false}\n\nfunction _convert(data) {\n  return data.map(({ id, title, completed }) => ({\n    id,\n    title,\n    done: completed\n  }));\n}\n\nexport default new API();\n","import UI from \"./UI\";\nexport default UI;\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport \"./styles.css\";\n\nexport default class extends React.Component {\n  state = {\n    isEdit: false,\n    show: true,\n    timeout: 200\n  };\n  toggleEdit = e => {\n    this.setState(state => ({\n      isEdit: !state.isEdit\n    }));\n  };\n  offEdit() {\n    this.setState({ isEdit: false });\n  }\n  removeTodo = () => {\n    this.setState({ show: false }, () =>\n      setTimeout(this.props.removeTodo, this.state.timeout)\n    );\n  };\n  render() {\n    const { title, id, done, saveTodo, toggleDoneTodo } = this.props;\n    return (\n      <Collapse\n        direction=\"up\"\n        timeout={this.state.timeout}\n        in={this.state.show}\n      >\n        <ListItem>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color={\"primary\"}\n                checked={done}\n                onChange={() => {\n                  toggleDoneTodo();\n                  this.offEdit();\n                }}\n              />\n            }\n          />\n          <InputBase\n            fullWidth\n            onKeyPress={e => {\n              if (e.charCode === 13) this.offEdit();\n            }}\n            onChange={e => saveTodo(id, e.target.value)}\n            className={`todo-title ${!this.state.isEdit ? \"todo-edit\" : \"\"} ${\n              done ? \"todo-done\" : \"\"\n            }`}\n            value={title}\n            readOnly={!this.state.isEdit}\n          />\n          <ListItemSecondaryAction>\n            <IconButton\n              color={this.state.isEdit ? \"primary\" : \"default\"}\n              onClick={this.toggleEdit}\n              aria-label=\"Edit\"\n            >\n              <Icon fontSize=\"small\">edit</Icon>\n            </IconButton>\n            <IconButton onClick={this.removeTodo} aria-label=\"Delete\">\n              <Icon fontSize=\"small\">delete</Icon>\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      </Collapse>\n    );\n  }\n}\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Todo from \"../Todo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport \"./styles.css\";\n\nexport default class extends React.Component {\n  componentDidMount() {\n    this.props.setServerData(30);\n  }\n  render() {\n    const {\n      todoList,\n      saveTodo,\n      removeTodo,\n      toggleDoneTodo,\n      loading,\n      globalTodoListIsEmpty\n    } = this.props;\n    if (loading)\n      return (\n        <div className=\"center\">\n          <CircularProgress />\n        </div>\n      );\n    console.log(globalTodoListIsEmpty);\n    if (globalTodoListIsEmpty) {\n      return (\n        <Typography style={{ opacity: \".6\", cursor: \"default\" }} variant=\"h6\">\n          Add todo below\n        </Typography>\n      );\n    }\n\n    return (\n      <List className={\"list\"}>\n        {todoList.map(({ title, id, done }) => (\n          <Todo\n            title={title}\n            id={id}\n            key={id}\n            done={done}\n            saveTodo={saveTodo}\n            removeTodo={() => removeTodo(id)}\n            toggleDoneTodo={() => toggleDoneTodo(id)}\n          />\n        ))}\n      </List>\n    );\n  }\n}\n","import { connect } from \"react-redux\";\nimport * as todoActions from \"../../actions/todoList\";\nimport * as loadingActions from \"../../actions/loading\";\nimport { filterTypes } from \"../../actions/filter\";\n\nimport serverAPI from \"../../serverAPI\";\n\nimport UI from \"./UI\";\n\nconst filterTodo = (todoList, filter) => {\n  switch (filter.type) {\n    case filterTypes.SEARCH:\n      if (!filter.by) return todoList;\n\n      return todoList.filter(todo => {\n        const title = todo.title.toLowerCase();\n        return title.indexOf(filter.by) > -1;\n      });\n\n    case filterTypes.ACTIVE:\n      return todoList.filter(todo => {\n        return todo.done === false;\n      });\n\n    case filterTypes.DONE:\n      return todoList.filter(todo => {\n        return todo.done === true;\n      });\n\n    default:\n      return todoList;\n  }\n};\n\nconst mapStateToProps = ({ todoList, filter, loading }) => ({\n  todoList: filterTodo(todoList, filter),\n  loading,\n  globalTodoListIsEmpty: todoList.length === 0\n});\nconst mapDispatchToProps = dispatch => ({\n  saveTodo: (id, title) => {\n    dispatch(todoActions.editTodo(id, title));\n  },\n  setServerData: count => {\n    const asyncGetTodos = () => {\n      return dispatch => {\n        serverAPI.getTodos(count).then(data => {\n          dispatch(todoActions.setTodoList(data));\n          dispatch(loadingActions.toggleLoading());\n        });\n      };\n    };\n    dispatch(asyncGetTodos());\n  },\n  removeTodo: id => dispatch(todoActions.removeTodo(id)),\n  toggleDoneTodo: id => dispatch(todoActions.toggleDoneTodo(id))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UI);\n","import Container from \"./Container\";\nexport default Container;\n","export const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const DONE_TOGGLE_TODO = \"DONE_TOGGLE_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const SET_TODO_LIST = \"SET_TODO_LIST\";\n\nexport const addTodo = ({ title, id, done, date }) => ({\n  type: ADD_TODO,\n  todo: {\n    title: title || \"\",\n    id: id || Math.random(),\n    done: done || false,\n    date: date || new Date()\n  }\n});\n\nexport const removeTodo = id => ({\n  type: REMOVE_TODO,\n  id\n});\n\nexport const toggleDoneTodo = id => ({\n  type: DONE_TOGGLE_TODO,\n  id\n});\n\nexport const editTodo = (id, title) => ({\n  type: EDIT_TODO,\n  todo: {\n    id,\n    title,\n    done: false,\n    date: new Date().getDate()\n  }\n});\nexport const setTodoList = todoList => ({\n  type: SET_TODO_LIST,\n  todoList\n});\n","export const TOGGLE_LOADING = \"TOGGLE_LOADING\";\nexport const toggleLoading = () => ({\n  type: TOGGLE_LOADING\n});\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default class extends Component {\n  state = {\n    value: \"\"\n  };\n  add = e => {\n    e.preventDefault();\n    const value = this.state.value;\n    if (value) this.props.addTodo(value);\n    this.setState({ value: \"\" });\n  };\n  updateValue = e => {\n    this.setState({ value: e.target.value });\n  };\n  render() {\n    return (\n      <form onSubmit={this.add} style={{ width: \"100%\" }}>\n        <TextField\n          onChange={this.updateValue}\n          value={this.state.value}\n          placeholder=\"What next?\"\n          fullWidth\n          autoFocus\n          margin=\"dense\"\n          variant=\"outlined\"\n        />\n      </form>\n    );\n  }\n}\n","import Container from \"./Container\";\nexport default Container;\n","import { connect } from \"react-redux\";\nimport * as todoActions from \"../../actions/todoList\";\nimport UI from \"./UI\";\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => ({\n  addTodo: title => {\n    dispatch(todoActions.addTodo({ title }));\n  }\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UI);\n","import UI from \"./UI\";\nexport default UI;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Search from \"../Search\";\nimport Filter from \"../Filter\";\nimport TodoList from \"../TodoList\";\nimport AddTodo from \"../AddTodo\";\n\nimport \"./styles.css\";\n\nexport default function() {\n  return (\n    <Grid item container xs={12}>\n      <Grid item lg={4} xs={2} />\n      <Grid lg={4} xs={8} item>\n        <React.Fragment>\n          <Typography className=\"page-title\" variant=\"h2\" component=\"h1\">\n            React Todo\n          </Typography>\n          <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n              <Grid item spacing={2} container xs={12}>\n                <Grid item xs={8}>\n                  <Search />\n                </Grid>\n                <Grid item xs={4}>\n                  <Filter />\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n          <Paper className=\"app-inner\">\n            <TodoList />\n          </Paper>\n          <Paper>\n            <Toolbar className=\"mt-1\">\n              <AddTodo />\n            </Toolbar>\n          </Paper>\n        </React.Fragment>\n      </Grid>\n    </Grid>\n  );\n}\n","import * as act from \"../actions/filter\";\n\nconst initialState = {\n  type: \"ALL\",\n  by: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case act.SEARCH_FILTER:\n      return { ...action.filter };\n    case act.ACTIVE_FILTER:\n      return { ...action.filter };\n    case act.DONE_FILTER:\n      return { ...action.filter };\n    case act.RESET_FILTER:\n      return { ...action.filter };\n    default:\n      return state;\n  }\n}\n","import * as act from \"../actions/todoList\";\n\nconst initialState = [\n  {\n    title: \"Тестовое todo\",\n    id: 123123,\n    done: false,\n    date: new Date()\n  }\n];\n\nexport default function(state = initialState, action) {\n  let copy, ind;\n  switch (action.type) {\n    case act.SET_TODO_LIST:\n      return action.todoList;\n    case act.ADD_TODO:\n      return [...state, action.todo];\n    case act.REMOVE_TODO:\n      ind = state.reduce((index, todo, cuttentIndex) => {\n        if (todo.id === action.id) return cuttentIndex;\n        return index;\n      }, -1);\n      return [...state.slice(0, ind), ...state.slice(ind + 1)];\n    case act.EDIT_TODO:\n      ind = state.reduce((index, todo, cuttentIndex) => {\n        if (todo.id === action.todo.id) return cuttentIndex;\n        return index;\n      }, -1);\n      copy = [...state];\n      copy[ind] = { ...action.todo };\n      return copy;\n    case act.DONE_TOGGLE_TODO:\n      ind = state.reduce((index, todo, cuttentIndex) => {\n        if (todo.id === action.id) return cuttentIndex;\n        return index;\n      }, -1);\n      return [\n        ...state.slice(0, ind),\n        { ...state[ind], done: !state[ind].done },\n        ...state.slice(ind + 1)\n      ];\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport filter from \"../reducers/filter\";\nimport todoList from \"../reducers/todoList\";\nimport loading from \"../reducers/loading\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  combineReducers({ filter, todoList, loading }),\n  composeWithDevTools(applyMiddleware(thunk))\n);\nexport default store;\n","import * as act from \"../actions/loading\";\n\nconst initialState = true;\n\nexport default (state = initialState, { type }) => {\n  switch (type) {\n    case act.TOGGLE_LOADING:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport store from \"./store\";\nimport serverAPI from \"./serverAPI\";\nimport { Provider } from \"react-redux\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}