{"version":3,"sources":["actions/filter.js","components/Search/UI.jsx","components/Search/index.js","components/Search/Container.js","components/Filter/index.js","components/Filter/Container.js","components/Filter/UI.jsx","serverAPI/index.js","components/Todo/index.js","components/Todo/UI.jsx","components/TodoList/UI.jsx","components/TodoList/index.js","components/TodoList/Container.js","actions/todoList.js","actions/loading.js","components/AddTodo/UI.jsx","components/AddTodo/index.js","components/AddTodo/Container.js","components/App/index.js","components/App/UI.jsx","reducers/filter.js","reducers/helpers.js","reducers/todoList.js","store/index.js","reducers/loading.js","index.js"],"names":["filterTypes","debounce","f","ms","context","timer","_this","this","_len","arguments","length","args","Array","_key","clearTimeout","setTimeout","apply","UI","props","_this2","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","value","inputhandler","e","setState","target","search","filter","by","_this$props","reset","react_default","a","createElement","FormControl","fullWidth","Input","placeholder","onChange","onBlur","className","Component","Container","connect","_ref","dispatch","type","toLowerCase","filterActions","showAll","showDone","showActive","ButtonGroup","variant","color","size","aria-label","Button","onClick","serverAPI","API","url","todos","index","fetch","then","response","json","todo","count","res","todoList","slice","map","id","title","completed","done","isEdit","show","timeout","toggleEdit","offEdit","save","removeTodo","saveTodo","toggleDoneTodo","Collapse","direction","in","ListItem","FormControlLabel","control","Checkbox","checked","InputBase","multiline","onKeyPress","charCode","concat","readOnly","ListItemSecondaryAction","IconButton","Icon","fontSize","React","setServerData","loading","globalTodoListIsEmpty","CircularProgress","console","log","Typography","style","opacity","cursor","List","Todo","key","indexOf","filterTodo","from","values","date","Date","getDate","todoActions","getTodos","data","isArray","Map","forEach","set","add","preventDefault","addTodo","updateValue","onSubmit","width","TextField","autoFocus","margin","Math","random","Grid","item","container","xs","lg","sm","Fragment","component","AppBar","position","Toolbar","spacing","Search","Filter","Paper","TodoList","AddTodo","initialState","copyMap","newMap","val","objectSpread","store","createStore","combineReducers","undefined","action","copyState","delete","get","composeWithDevTools","applyMiddleware","thunk","render","es","App","document","getElementById"],"mappings":"2TAKaA,EACH,SADGA,EAEL,OAFKA,EAGH,mECHJC,SAAW,SAACC,EAAGC,EAAIC,GACvB,IAAIC,EAAQ,KACZ,OAAO,WAAkB,QAAAC,EAAAC,KAAAC,EAAAC,UAAAC,OAANC,EAAM,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAANF,EAAME,GAAAJ,UAAAI,GAMnBR,GACFS,aAAaT,GAGfA,EAAQU,WATW,WACjBb,EAAEc,MAAMZ,GAAWE,EAAMK,GACzBN,EAAQ,MAOqBF,MAIdc,cACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAb,KAAAU,IACjBE,EAAAC,OAAAE,EAAA,EAAAF,CAAAb,KAAAa,OAAAG,EAAA,EAAAH,CAAAH,GAAAO,KAAAjB,KAAMW,KAGRO,MAAQ,CACNC,MAAO,IALUP,EAUnBQ,aAAe,SAAAC,GACbT,EAAKU,SACH,CACEH,MAAOE,EAAEE,OAAOJ,OAElB,kBAAMP,EAAKY,OAAOZ,EAAKM,MAAMC,UAb/BP,EAAKY,OAAS9B,EAASkB,EAAKD,MAAMa,OAAQ,IAFzBZ,mFAQjBZ,KAAKsB,SAAS,CAAEH,MAAOnB,KAAKW,MAAMc,OAAOC,sCAUlC,IAAAC,EACmB3B,KAAKW,MAAvBc,EADDE,EACCF,OAAQG,EADTD,EACSC,MAChB,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAaC,WAAS,GACpBJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEf,MAAOnB,KAAKkB,MAAMC,MAClBgB,YAAY,iBACZC,SAAUpC,KAAKoB,aACfiB,OAAQ,WACDZ,EAAOC,IAAIE,KAElBU,UAAU,0BA/BUC,aCpBjBC,ECQAC,YALS,SAAAC,GAAA,MAAiB,CAAEjB,OAAnBiB,EAAGjB,SACA,SAAAkB,GAAQ,MAAK,CACtCnB,OAAQ,SAAAE,GAAE,OAAIiB,EHMY,SAAAjB,GAAE,MAAK,CACjCkB,KAb2B,oBAc3BnB,OAAQ,CACNmB,KAAM,SACNlB,GAAIA,EAAGmB,gBGVcC,CAA2BpB,KAClDE,MAAO,kBAAMe,EH4BmB,CAChCC,KAjC0B,eAkC1BnB,OAAQ,CACNmB,KAAM,MACNlB,GAAI,WG9BOe,CAGb/B,qBCXa8B,SCSAC,YANS,SAAAC,GAAA,MAAiB,CAAEjB,OAAnBiB,EAAGjB,SACA,SAAAkB,GAAQ,MAAK,CACtCI,QAAS,kBAAMJ,EL6BiB,CAChCC,KAjC0B,eAkC1BnB,OAAQ,CACNmB,KAAM,MACNlB,GAAI,SKhCNsB,SAAU,kBAAML,ELae,CAC/BC,KApByB,cAqBzBnB,OAAQ,CACNmB,KAAM,OACNlB,GAAI,SKhBNuB,WAAY,kBAAMN,ELmBe,CACjCC,KA1B2B,gBA2B3BnB,OAAQ,CACNmB,KAAM,SACNlB,GAAI,WKrBOe,CCJA,SAAS9B,GAAO,IACrBc,EAA0Cd,EAA1Cc,OAAQsB,EAAkCpC,EAAlCoC,QAASC,EAAyBrC,EAAzBqC,SAAUC,EAAetC,EAAfsC,WACnC,OACEpB,EAAAC,EAAAC,cAAA,OAAKO,UAAU,YACbT,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIjB,WAAS,EACTkB,QAAQ,YACRC,MAAM,UACNC,KAAK,QACLC,aAAW,+BAEbzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,QAAST,EACTT,UAA2B,QAAhBb,EAAOmB,KAAiB,SAAW,IAFhD,OAMAf,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,QAASP,EACTX,UAA2B,WAAhBb,EAAOmB,KAAoB,SAAW,IAFnD,UAMAf,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACEC,QAASR,EACTV,UAA2B,SAAhBb,EAAOmB,KAAkB,SAAW,IAFjD,aCEO,IAAAa,EAAA,eA9Bb,SAAAC,IAAe7C,OAAAC,EAAA,EAAAD,CAAAb,KAAA0D,GACb1D,KAAK2D,IAAM,8CACX3D,KAAK4D,MAAQ,uDAEPC,GACN,OAAOC,MAAM9D,KAAK2D,IAAME,GACrBE,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACJ,OAAOA,qCAIJC,GACP,OAAOL,MAAM9D,KAAK2D,KACfI,KAAK,SAAAK,GAAG,OAAIA,EAAIH,SAChBF,KAAK,SAAAM,GAAQ,OAAIA,EAASC,MAAM,EAAGH,KACnCJ,KAAK,SAAAM,GAAQ,OAAaA,EAOnBE,IAAI,SAAA7B,GAAA,IAAG8B,EAAH9B,EAAG8B,GAAIC,EAAP/B,EAAO+B,MAAOC,EAAdhC,EAAcgC,UAAd,MAA+B,CAC7CF,KACAC,QACAE,KAAMD,kGC1BKhE,oNCWbQ,MAAQ,CACN0D,QAAQ,EACRC,MAAM,EACNC,QAAS,IACT3D,MAAOpB,EAAKY,MAAM8D,SAEpBM,WAAa,WACXhF,EAAKuB,SAAS,SAAAJ,GAAK,MAAK,CACtB0D,QAAS1D,EAAM0D,aAGnBxC,SAAW,SAAAf,GACTtB,EAAKuB,SAAS,CAAEH,MAAOE,EAAEE,OAAOJ,WAElC6D,QAAU,WACRjF,EAAKuB,SAAS,CAAEsD,QAAQ,IACxB7E,EAAKkF,UAEPC,WAAa,WACXnF,EAAKuB,SAAS,CAAEuD,MAAM,GAAS,kBAC7BrE,WAAWT,EAAKY,MAAMuE,WAAYnF,EAAKmB,MAAM4D,WAE/C/E,EAAKkF,UAEPA,KAAO,WACLlF,EAAKY,MAAMwE,SAASpF,EAAKY,MAAM6D,GAAIzE,EAAKmB,MAAMC,gFAEvC,IAAAP,EAAAZ,KAAA2B,EAC0B3B,KAAKW,MAA9BgE,EADDhD,EACCgD,KAAMS,EADPzD,EACOyD,eACd,OACEvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACEC,UAAU,KACVR,QAAS9E,KAAKkB,MAAM4D,QACpBS,GAAIvF,KAAKkB,MAAM2D,MAEfhD,EAAAC,EAAAC,cAACyD,EAAA,EAAD,KACE3D,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CACEC,QACE7D,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CACEvC,MAAO,UACPwC,QAASjB,EACTvC,SAAUgD,MAIhBvD,EAAAC,EAAAC,cAAC8D,EAAA,EAAD,CACEC,WAAS,EACT7D,WAAS,EACTI,OAAQrC,KAAKgF,QACbe,WAAY,SAAA1E,GACS,KAAfA,EAAE2E,UAAiBpF,EAAKoE,WAE9B5C,SAAUpC,KAAKoC,SACfE,UAAS,cAAA2D,OAAiBjG,KAAKkB,MAAM0D,OAAuB,GAAd,YAArC,KAAAqB,OACPtB,EAAO,YAAc,IAEvBxD,MAAOnB,KAAKkB,MAAMC,MAClB+E,UAAWlG,KAAKkB,MAAM0D,SAExB/C,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAyB7D,UAAW,gBAClCT,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CACEhD,MAAOpD,KAAKkB,MAAM0D,OAAS,UAAY,UACvCpB,QAASxD,KAAK+E,WACdzB,aAAW,QAEXzB,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,SAAS,SAAf,SAEFzE,EAAAC,EAAAC,cAACqE,EAAA,EAAD,CAAY5C,QAASxD,KAAKkF,WAAY5B,aAAW,UAC/CzB,EAAAC,EAAAC,cAACsE,EAAA,EAAD,CAAMC,SAAS,SAAf,qBArEeC,IAAMhE,0NCD/BvC,KAAKW,MAAM6F,cAAc,qCAElB,IAAA7E,EAQH3B,KAAKW,MANP0D,EAFK1C,EAEL0C,SACAc,EAHKxD,EAGLwD,SACAD,EAJKvD,EAILuD,WACAE,EALKzD,EAKLyD,eACAqB,EANK9E,EAML8E,QACAC,EAPK/E,EAOL+E,sBAEF,OAAID,EAEA5E,EAAAC,EAAAC,cAAA,OAAKO,UAAU,UACbT,EAAAC,EAAAC,cAAC4E,EAAA,EAAD,QAGNC,QAAQC,IAAIH,GACRA,EAEA7E,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAYC,MAAO,CAAEC,QAAS,KAAMC,OAAQ,WAAa9D,QAAQ,MAAjE,kBAKCkB,EAASlE,OAKZ0B,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CAAM5E,UAAW,QACd+B,EAASE,IAAI,SAAA7B,GAAA,IAAG+B,EAAH/B,EAAG+B,MAAOD,EAAV9B,EAAU8B,GAAIG,EAAdjC,EAAciC,KAAd,OACZ9C,EAAAC,EAAAC,cAACoF,EAAD,CACE1C,MAAOA,EACPD,GAAIA,EACJ4C,IAAK5C,EACLG,KAAMA,EACNQ,SAAUA,EACVD,WAAY,kBAAMA,EAAWV,IAC7BY,eAAgB,kBAAMA,EAAeZ,SAbpC3C,EAAAC,EAAAC,cAAA,sCA5BgBwE,IAAMhE,YCPpBC,EC2DAC,YA1BS,SAAAC,GAAmC,IAAhC2B,EAAgC3B,EAAhC2B,SAAU5C,EAAsBiB,EAAtBjB,OAAQgF,EAAc/D,EAAd+D,QAE3C,MAAO,CACLpC,SA5Be,SAACA,EAAU5C,GAC5B,OAAQA,EAAOmB,MACb,KAAKnD,EACH,OAAKgC,EAAOC,GAEL2C,EAAS5C,OAAO,SAAAyC,GAErB,OADcA,EAAKO,MAAM5B,cACZwE,QAAQ5F,EAAOC,KAAO,IAJd2C,EAOzB,KAAK5E,EACH,OAAO4E,EAAS5C,OAAO,SAAAyC,GACrB,OAAqB,IAAdA,EAAKS,OAGhB,KAAKlF,EACH,OAAO4E,EAAS5C,OAAO,SAAAyC,GACrB,OAAqB,IAAdA,EAAKS,OAGhB,QACE,OAAON,GAKaiD,CAAWjH,MAAMkH,KAAKlD,EAASmD,UAAW/F,GAGhEgF,UACAC,sBAAyC,IAAlBrC,EAAShB,OAGT,SAAAV,GAAQ,MAAK,CACtCwC,SAAU,SAACX,EAAIC,GACb9B,EClBoB,SAAC6B,EAAIC,GAAL,MAAgB,CACtC7B,KAxBuB,YAyBvBsB,KAAM,CACJM,KACAC,QACAE,MAAM,EACN8C,MAAM,IAAIC,MAAOC,YDYRC,CAAqBpD,EAAIC,KAEpC+B,cAAe,SAAArC,GASbxB,EAPS,SAAAA,GACLc,EAAUoE,SAAS1D,GAAOJ,KAAK,SAAA+D,GAC7BnF,ECfiB,SAAA0B,GACzB,GAAIhE,MAAM0H,QAAS1D,GAAW,CAC5B,IAAME,EAAM,IAAIyD,IAChB3D,EAAS4D,QAAQ,SAAA/D,GACfK,EAAI2D,IAAIhE,EAAKM,GAAIN,KAEnBG,EAAWE,EAEb,MAAO,CACL3B,KAxCyB,gBAyCzByB,YDKeuD,CAAwBE,IACjCnF,EElD0B,CAClCC,KAF4B,wBFyD5BsC,WAAY,SAAAV,GAAE,OAAI7B,ECzCM,SAAA6B,GAAE,MAAK,CAC/B5B,KAhByB,cAiBzB4B,MDuC2BoD,CAAuBpD,KAClDY,eAAgB,SAAAZ,GAAE,OAAI7B,ECrCM,SAAA6B,GAAE,MAAK,CACnC5B,KApB8B,mBAqB9B4B,MDmC+BoD,CAA2BpD,OAE7C/B,CAGb/B,yNG3DAQ,MAAQ,CACNC,MAAO,MAETgH,IAAM,SAAA9G,GACJA,EAAE+G,iBACF,IAAMjH,EAAQpB,EAAKmB,MAAMC,MACrBA,GAAOpB,EAAKY,MAAM0H,QAAQlH,GAC9BpB,EAAKuB,SAAS,CAAEH,MAAO,QAEzBmH,YAAc,SAAAjH,GACZtB,EAAKuB,SAAS,CAAEH,MAAOE,EAAEE,OAAOJ,iFAGhC,OACEU,EAAAC,EAAAC,cAAA,QAAMwG,SAAUvI,KAAKmI,IAAKpB,MAAO,CAAEyB,MAAO,SACxC3G,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CACErG,SAAUpC,KAAKsI,YACfnH,MAAOnB,KAAKkB,MAAMC,MAClBgB,YAAY,aACZF,WAAS,EACTyG,WAAS,EACTC,OAAO,QACPxF,QAAQ,qBAvBWZ,aCFdC,ECUAC,YAPS,SAAAvB,GAAK,MAAK,IACP,SAAAyB,GAAQ,MAAK,CACtC0F,QAAS,SAAA5D,GAEP9B,EJFmB,SAAAD,GAAA,IAAG+B,EAAH/B,EAAG+B,MAAOD,EAAV9B,EAAU8B,GAAIG,EAAdjC,EAAciC,KAAM8C,EAApB/E,EAAoB+E,KAApB,MAAgC,CACrD7E,KAPsB,WAQtBsB,KAAM,CACJO,MAAOA,GAAS,GAChBD,GAAIA,GAAMoE,KAAKC,SACflE,KAAMA,IAAQ,EACd8C,KAAMA,GAAQ,IAAIC,OIJTE,CAAoB,CAAEnD,cAGpBhC,CAGb/B,GCbaA,SCaA,WACb,OACEmB,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMC,MAAI,EAACC,WAAS,EAACC,GAAI,IACvBpH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMC,MAAI,EAACG,GAAI,EAAGC,GAAI,EAAGF,GAAI,IAC7BpH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMI,GAAI,EAAGC,GAAI,EAAGF,GAAI,GAAIF,MAAI,GAC9BlH,EAAAC,EAAAC,cAACF,EAAAC,EAAMsH,SAAP,KACEvH,EAAAC,EAAAC,cAAC+E,EAAA,EAAD,CAAYxE,UAAU,aAAaa,QAAQ,KAAKkG,UAAU,MAA1D,cAGAxH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAQC,SAAS,SAASnG,MAAM,WAC9BvB,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMxG,UAAW,SAAUyG,MAAI,EAACU,QAAS,EAAGT,WAAS,EAACC,GAAI,IACxDpH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMC,MAAI,EAACI,GAAI,EAAGF,GAAI,IACpBpH,EAAAC,EAAAC,cAAC2H,EAAD,OAEF7H,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,CAAMC,MAAI,EAACI,GAAI,EAAGF,GAAI,IACpBpH,EAAAC,EAAAC,cAAC4H,EAAD,UAKR9H,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,CAAOtH,UAAU,aACfT,EAAAC,EAAAC,cAAC8H,EAAD,OAEFhI,EAAAC,EAAAC,cAAC6H,EAAA,EAAD,KACE/H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAASlH,UAAU,QACjBT,EAAAC,EAAAC,cAAC+H,EAAD,6BCtCRC,EAAe,CACnBnH,KAAM,MACNlB,GAAI,MCJOsI,EAAU,SAAAzF,GACnB,IAAM0F,EAAS,IAAIjC,IAInB,OAHAzD,EAAI0D,QAAQ,SAACiC,EAAK9C,GACd6C,EAAO/B,IAAId,EAAXvG,OAAAsJ,EAAA,EAAAtJ,CAAA,GAAoBqJ,MAEjBD,GCFLF,EAAe,IAAI/B,oBCQVoC,EAJDC,sBACZC,0BAAgB,CAAE7I,OHDL,WAAuC,IAA9BP,EAA8BhB,UAAAC,OAAA,QAAAoK,IAAArK,UAAA,GAAAA,UAAA,GAAtB6J,EAAcS,EAAQtK,UAAAC,OAAA,EAAAD,UAAA,QAAAqK,EACpD,OAAQC,EAAO5H,MACb,IpBTyB,oBoBWzB,IpBTyB,gBoBWzB,IpBZuB,coBcvB,IpBZwB,eoBatB,OAAO/B,OAAAsJ,EAAA,EAAAtJ,CAAA,GAAK2J,EAAO/I,QACrB,QACE,OAAOP,IGVemD,SDJb,WAAuC,IAChDoG,EADkBvJ,EAA8BhB,UAAAC,OAAA,QAAAoK,IAAArK,UAAA,GAAAA,UAAA,GAAtB6J,EAAcS,EAAQtK,UAAAC,OAAA,EAAAD,UAAA,QAAAqK,EAGpD,OAAQC,EAAO5H,MAEb,ITLyB,gBSMvB,OAAO4H,EAAOnG,SAEhB,ITZoB,WSiBlB,OAJAoG,EAAYT,EAAQ9I,IACVgH,IAAIsC,EAAOtG,KAAKM,GAAIgG,EAAOtG,MACrC0C,QAAQC,IAAI4D,GAELA,EAET,ITlBuB,cSqBrB,OAFAA,EAAYT,EAAQ9I,IACVwJ,OAAOF,EAAOhG,IAChBiG,EAEV,ITrBqB,YSwBnB,OAFAA,EAAYT,EAAQ9I,IACVgH,IAAIsC,EAAOtG,KAAKM,GAAIgG,EAAOtG,MAC7BuG,EAEV,IT3B4B,mBSiC1B,OALAA,EAAYT,EAAQ9I,IACVgH,IAAIsC,EAAOhG,GAArB3D,OAAAsJ,EAAA,EAAAtJ,CAAA,GACK4J,EAAUE,IAAIH,EAAOhG,IAD1B,CAEEG,MAAOzD,EAAMyJ,IAAIH,EAAOhG,IAAIG,QAEtB8F,EACV,QACE,OAAOvJ,IC7ByBuF,QCJvB,WAAoC,IAAnCvF,IAAmChB,UAAAC,OAAA,QAAAoK,IAAArK,UAAA,KAAAA,UAAA,GACjD,QADiDA,UAAAC,OAAA,EAAAD,UAAA,QAAAqK,GAAX3H,MAEpC,IVN0B,iBUOxB,OAAQ1B,EAEV,QACE,OAAOA,MDDX0J,8BAAoBC,0BAAgBC,OEHtCC,iBACElJ,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,CAAUZ,MAAOA,GACfvI,EAAAC,EAAAC,cAACkJ,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.dc751ac0.chunk.js","sourcesContent":["export const SEARCH_FILTER = \"SET_SEARCH_FILTER\";\nexport const DONE_FILTER = \"DONE_FILTER\";\nexport const ACTIVE_FILTER = \"ACTIVE_FILTER\";\nexport const RESET_FILTER = \"RESET_FILTER\";\n\nexport const filterTypes = {\n  SEARCH: \"SEARCH\",\n  DONE: \"DONE\",\n  ACTIVE: \"ACTIVE\",\n  ALL: \"ALL\"\n};\n\nexport const searchFilter = by => ({\n  type: SEARCH_FILTER,\n  filter: {\n    type: \"SEARCH\",\n    by: by.toLowerCase()\n  }\n});\n\nexport const doneFilter = () => ({\n  type: DONE_FILTER,\n  filter: {\n    type: \"DONE\",\n    by: null\n  }\n});\nexport const activeFilter = () => ({\n  type: ACTIVE_FILTER,\n  filter: {\n    type: \"ACTIVE\",\n    by: null\n  }\n});\n\nexport const resetFilter = () => ({\n  type: RESET_FILTER,\n  filter: {\n    type: \"ALL\",\n    by: null\n  }\n});\n","import React, { Component } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Input from \"@material-ui/core/Input\";\nimport \"./styles.css\";\n\nconst debounce = (f, ms, context) => {\n  let timer = null;\n  return function(...args) {\n    const onComplete = () => {\n      f.apply(context || this, args);\n      timer = null;\n    };\n\n    if (timer) {\n      clearTimeout(timer);\n    }\n\n    timer = setTimeout(onComplete, ms);\n  };\n};\n\nexport default class UI extends Component {\n  constructor(props) {\n    super(props);\n    this.search = debounce(this.props.search, 50);\n  }\n  state = {\n    value: \"\"\n  };\n  componentDidMount() {\n    this.setState({ value: this.props.filter.by });\n  }\n  inputhandler = e => {\n    this.setState(\n      {\n        value: e.target.value\n      },\n      () => this.search(this.state.value)\n    );\n  };\n  render() {\n    const { filter, reset } = this.props;\n    return (\n      <div>\n        <FormControl fullWidth>\n          <Input\n            value={this.state.value}\n            placeholder=\"Serach todo...\"\n            onChange={this.inputhandler}\n            onBlur={() => {\n              if (!filter.by) reset();\n            }}\n            className=\"search-input\"\n          />\n        </FormControl>\n      </div>\n    );\n  }\n}\n","import Container from \"./Container\";\nexport default Container;\n","import { connect } from \"react-redux\";\nimport * as filterActions from \"../../actions/filter\";\nimport UI from \"./UI\";\n\nconst mapStateToProps = ({ filter }) => ({ filter });\nconst mapDispatchToProps = dispatch => ({\n  search: by => dispatch(filterActions.searchFilter(by)),\n  reset: () => dispatch(filterActions.resetFilter())\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UI);\n","import Container from \"./Container\";\nexport default Container;\n","import { connect } from \"react-redux\";\nimport * as filterActions from \"../../actions/filter\";\nimport UI from \"./UI\";\n\nconst mapStateToProps = ({ filter }) => ({ filter });\nconst mapDispatchToProps = dispatch => ({\n  showAll: () => dispatch(filterActions.resetFilter()),\n  showDone: () => dispatch(filterActions.doneFilter()),\n  showActive: () => dispatch(filterActions.activeFilter())\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UI);\n","import React from \"react\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\n\nimport \"./styles.css\";\n\nexport default function(props) {\n  const { filter, showAll, showDone, showActive } = props;\n  return (\n    <div className=\"btnGroup\">\n      <ButtonGroup\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          aria-label=\"Small outlined button group\"\n      >\n        <Button\n          onClick={showAll}\n          className={filter.type === \"ALL\" ? \"active\" : \"\"}\n        >\n          All\n        </Button>\n        <Button\n          onClick={showActive}\n          className={filter.type === \"ACTIVE\" ? \"active\" : \"\"}\n        >\n          Active\n        </Button>\n        <Button\n          onClick={showDone}\n          className={filter.type === \"DONE\" ? \"active\" : \"\"}\n        >\n          Done\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n","class API {\n  constructor() {\n    this.url = \"https://jsonplaceholder.typicode.com/todos/\";\n    this.todos = [];\n  }\n  getTodo(index) {\n    return fetch(this.url + index)\n      .then(response => response.json())\n      .then(todo => {\n        return todo;\n      });\n  }\n\n  getTodos(count) {\n    return fetch(this.url)\n      .then(res => res.json())\n      .then(todoList => todoList.slice(0, count))\n      .then(todoList => _convert(todoList));\n  }\n}\n//{userId: 1, id: 1, title: \"delectus aut autem\", completed: false}\n//{id: 1, title: \"delectus aut autem\", completed: false}\n\nfunction _convert(data) {\n  return data.map(({ id, title, completed }) => ({\n    id,\n    title,\n    done: completed\n  }));\n}\n\nexport default new API();\n","import UI from \"./UI\";\nexport default UI;\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Icon from \"@material-ui/core/Icon\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport \"./styles.css\";\n\nexport default class extends React.Component {\n  state = {\n    isEdit: false,\n    show: true,\n    timeout: 200,\n    value: this.props.title\n  };\n  toggleEdit = () => {\n    this.setState(state => ({\n      isEdit: !state.isEdit\n    }));\n  };\n  onChange = e => {\n    this.setState({ value: e.target.value });\n  };\n  offEdit = () => {\n    this.setState({ isEdit: false });\n    this.save();\n  };\n  removeTodo = () => {\n    this.setState({ show: false }, () =>\n      setTimeout(this.props.removeTodo, this.state.timeout)\n    );\n    this.save();\n  };\n  save = () => {\n    this.props.saveTodo(this.props.id, this.state.value);\n  };\n  render() {\n    const { done, toggleDoneTodo } = this.props;\n    return (\n      <Collapse\n        direction=\"up\"\n        timeout={this.state.timeout}\n        in={this.state.show}\n      >\n        <ListItem>\n          <FormControlLabel\n            control={\n              <Checkbox\n                color={\"primary\"}\n                checked={done}\n                onChange={toggleDoneTodo}\n              />\n            }\n          />\n          <InputBase\n            multiline\n            fullWidth\n            onBlur={this.offEdit}\n            onKeyPress={e => {\n              if (e.charCode === 13) this.offEdit();\n            }}\n            onChange={this.onChange}\n            className={`todo-title ${!this.state.isEdit ? \"todo-edit\" : \"\"} ${\n              done ? \"todo-done\" : \"\"\n            }`}\n            value={this.state.value}\n            readOnly={!this.state.isEdit}\n          />\n          <ListItemSecondaryAction className={\"todo-options\"}>\n            <IconButton\n              color={this.state.isEdit ? \"primary\" : \"default\"}\n              onClick={this.toggleEdit}\n              aria-label=\"Edit\"\n            >\n              <Icon fontSize=\"small\">edit</Icon>\n            </IconButton>\n            <IconButton onClick={this.removeTodo} aria-label=\"Delete\">\n              <Icon fontSize=\"small\">delete</Icon>\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      </Collapse>\n    );\n  }\n}\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Todo from \"../Todo\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport \"./styles.css\";\n\nexport default class extends React.Component {\n  componentDidMount() {\n    this.props.setServerData(50);\n  }\n  render() {\n    const {\n      todoList,\n      saveTodo,\n      removeTodo,\n      toggleDoneTodo,\n      loading,\n      globalTodoListIsEmpty\n    } = this.props;\n    if (loading)\n      return (\n        <div className=\"center\">\n          <CircularProgress />\n        </div>\n      );\n    console.log(globalTodoListIsEmpty);\n    if (globalTodoListIsEmpty) {\n      return (\n        <Typography style={{ opacity: \".6\", cursor: \"default\" }} variant=\"h6\">\n          Add todo below\n        </Typography>\n      );\n    }\n    if (!todoList.length) {\n      return <span> nothing found</span>;\n    }\n\n    return (\n      <List className={\"list\"}>\n        {todoList.map(({ title, id, done }) => (\n          <Todo\n            title={title}\n            id={id}\n            key={id}\n            done={done}\n            saveTodo={saveTodo}\n            removeTodo={() => removeTodo(id)}\n            toggleDoneTodo={() => toggleDoneTodo(id)}\n          />\n        ))}\n      </List>\n    );\n  }\n}\n","import Container from \"./Container\";\nexport default Container;\n","import { connect } from \"react-redux\";\nimport * as todoActions from \"../../actions/todoList\";\nimport * as loadingActions from \"../../actions/loading\";\nimport { filterTypes } from \"../../actions/filter\";\n\nimport serverAPI from \"../../serverAPI\";\n\nimport UI from \"./UI\";\n\nconst filterTodo = (todoList, filter) => {\n  switch (filter.type) {\n    case filterTypes.SEARCH:\n      if (!filter.by) return todoList;\n\n      return todoList.filter(todo => {\n        const title = todo.title.toLowerCase();\n        return title.indexOf(filter.by) > -1;\n      });\n\n    case filterTypes.ACTIVE:\n      return todoList.filter(todo => {\n        return todo.done === false;\n      });\n\n    case filterTypes.DONE:\n      return todoList.filter(todo => {\n        return todo.done === true;\n      });\n\n    default:\n      return todoList;\n  }\n};\n\nconst mapStateToProps = ({ todoList, filter, loading }) => {\n  const visibleTodoList = filterTodo(Array.from(todoList.values()), filter);\n  return {\n    todoList: visibleTodoList,\n    loading,\n    globalTodoListIsEmpty: todoList.size === 0\n  };\n};\nconst mapDispatchToProps = dispatch => ({\n  saveTodo: (id, title) => {\n    dispatch(todoActions.editTodo(id, title));\n  },\n  setServerData: count => {\n    const asyncGetTodos = () => {\n      return dispatch => {\n        serverAPI.getTodos(count).then(data => {\n          dispatch(todoActions.setTodoList(data));\n          dispatch(loadingActions.toggleLoading());\n        });\n      };\n    };\n    dispatch(asyncGetTodos());\n  },\n  removeTodo: id => dispatch(todoActions.removeTodo(id)),\n  toggleDoneTodo: id => dispatch(todoActions.toggleDoneTodo(id))\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UI);\n","export const ADD_TODO = \"ADD_TODO\";\nexport const REMOVE_TODO = \"REMOVE_TODO\";\nexport const DONE_TOGGLE_TODO = \"DONE_TOGGLE_TODO\";\nexport const EDIT_TODO = \"EDIT_TODO\";\nexport const SET_TODO_LIST = \"SET_TODO_LIST\";\n\nexport const addTodo = ({ title, id, done, date }) => ({\n  type: ADD_TODO,\n  todo: {\n    title: title || \"\",\n    id: id || Math.random(),\n    done: done || false,\n    date: date || new Date()\n  }\n});\n\nexport const removeTodo = id => ({\n  type: REMOVE_TODO,\n  id\n});\n\nexport const toggleDoneTodo = id => ({\n  type: DONE_TOGGLE_TODO,\n  id\n});\n\nexport const editTodo = (id, title) => ({\n  type: EDIT_TODO,\n  todo: {\n    id,\n    title,\n    done: false,\n    date: new Date().getDate()\n  }\n});\nexport const setTodoList = todoList => {\n  if (Array.isArray((todoList))){\n    const map = new Map();\n    todoList.forEach(todo => {\n      map.set(todo.id, todo);\n    });\n    todoList = map;\n  }\n  return {\n    type: SET_TODO_LIST,\n    todoList\n  }\n};\n","export const TOGGLE_LOADING = \"TOGGLE_LOADING\";\nexport const toggleLoading = () => ({\n  type: TOGGLE_LOADING\n});\n","import React, { Component } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nexport default class extends Component {\n  state = {\n    value: \"\"\n  };\n  add = e => {\n    e.preventDefault();\n    const value = this.state.value;\n    if (value) this.props.addTodo(value);\n    this.setState({ value: \"\" });\n  };\n  updateValue = e => {\n    this.setState({ value: e.target.value });\n  };\n  render() {\n    return (\n      <form onSubmit={this.add} style={{ width: \"100%\" }}>\n        <TextField\n          onChange={this.updateValue}\n          value={this.state.value}\n          placeholder=\"What next?\"\n          fullWidth\n          autoFocus\n          margin=\"dense\"\n          variant=\"outlined\"\n        />\n      </form>\n    );\n  }\n}\n","import Container from \"./Container\";\nexport default Container;\n","import { connect } from \"react-redux\";\nimport * as todoActions from \"../../actions/todoList\";\nimport UI from \"./UI\";\n\nconst mapStateToProps = state => ({});\nconst mapDispatchToProps = dispatch => ({\n  addTodo: title => {\n    debugger;\n    dispatch(todoActions.addTodo({ title }));\n  }\n});\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UI);\n","import UI from \"./UI\";\nexport default UI;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport Search from \"../Search\";\nimport Filter from \"../Filter\";\nimport TodoList from \"../TodoList\";\nimport AddTodo from \"../AddTodo\";\n\nimport \"./styles.css\";\n\nexport default function() {\n  return (\n    <Grid item container xs={12}>\n      <Grid item lg={4} sm={2} xs={0}/>\n      <Grid lg={4} sm={8} xs={12} item>\n        <React.Fragment>\n          <Typography className=\"page-title\" variant=\"h2\" component=\"h1\">\n            React Todo\n          </Typography>\n          <AppBar position=\"static\" color=\"primary\">\n            <Toolbar>\n              <Grid className={\"header\"} item spacing={2} container xs={12}>\n                <Grid item sm={7} xs={12}>\n                  <Search />\n                </Grid>\n                <Grid item sm={5} xs={12}>\n                  <Filter />\n                </Grid>\n              </Grid>\n            </Toolbar>\n          </AppBar>\n          <Paper className=\"app-inner\">\n            <TodoList />\n          </Paper>\n          <Paper>\n            <Toolbar className=\"mt-1\">\n              <AddTodo />\n            </Toolbar>\n          </Paper>\n        </React.Fragment>\n      </Grid>\n    </Grid>\n  );\n}\n","import * as act from \"../actions/filter\";\n\nconst initialState = {\n  type: \"ALL\",\n  by: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case act.SEARCH_FILTER:\n      return { ...action.filter };\n    case act.ACTIVE_FILTER:\n      return { ...action.filter };\n    case act.DONE_FILTER:\n      return { ...action.filter };\n    case act.RESET_FILTER:\n      return { ...action.filter };\n    default:\n      return state;\n  }\n}\n","export const copyMap = map =>{\n    const newMap = new Map();\n    map.forEach((val, key) => {\n        newMap.set(key, {...val});\n    });\n    return newMap;\n}","import * as act from \"../actions/todoList\";\nimport { copyMap } from \"./helpers\";\n\nconst initialState = new Map()\nexport default function(state = initialState, action) {\n  let copyState;\n\n  switch (action.type) {\n\n    case act.SET_TODO_LIST:\n      return action.todoList;\n\n    case act.ADD_TODO:\n      copyState = copyMap(state);\n      copyState.set(action.todo.id, action.todo);\n      console.log(copyState)\n      debugger;\n      return copyState;\n\n    case act.REMOVE_TODO:\n      copyState = copyMap(state);\n      copyState.delete(action.id);\n      return  copyState;\n\n    case act.EDIT_TODO:\n      copyState = copyMap(state);\n      copyState.set(action.todo.id, action.todo);\n      return  copyState;\n\n    case act.DONE_TOGGLE_TODO:\n      copyState = copyMap(state);\n      copyState.set(action.id, {\n        ...copyState.get(action.id),\n        done: !state.get(action.id).done\n      });\n      return  copyState;\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport filter from \"../reducers/filter\";\nimport todoList from \"../reducers/todoList\";\nimport loading from \"../reducers/loading\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nconst store = createStore(\n  combineReducers({ filter, todoList, loading }),\n  composeWithDevTools(applyMiddleware(thunk))\n);\nexport default store;\n","import * as act from \"../actions/loading\";\n\nconst initialState = true;\n\nexport default (state = initialState, { type }) => {\n  switch (type) {\n    case act.TOGGLE_LOADING:\n      return !state;\n\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { render } from \"react-dom\";\nimport App from \"./components/App\";\nimport store from \"./store\";\nimport { Provider } from \"react-redux\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}